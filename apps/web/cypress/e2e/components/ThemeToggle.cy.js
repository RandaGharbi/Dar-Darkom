describe('ThemeToggle Component E2E', () => {
  beforeEach(() => {
    cy.visit('/');
  });

  it('affiche le bouton de changement de th√®me', () => {
    // V√©rifier que le bouton est pr√©sent
    cy.get('[data-testid="theme-toggle"]').should('be.visible');
  });

  it('change de th√®me quand on clique dessus', () => {
    // V√©rifier le th√®me initial (clair)
    cy.checkLightMode();

    // Cliquer sur le bouton de th√®me
    cy.get('[data-testid="theme-toggle"]').click();

    // V√©rifier que le th√®me a chang√© (sombre)
    cy.checkDarkMode();

    // Cliquer √† nouveau pour revenir au th√®me clair
    cy.get('[data-testid="theme-toggle"]').click();
    cy.checkLightMode();
  });

  it('persiste le th√®me apr√®s rechargement', () => {
    // Changer vers le th√®me sombre
    cy.get('[data-testid="theme-toggle"]').click();
    cy.checkDarkMode();

    // Recharger la page
    cy.reload();

    // V√©rifier que le th√®me sombre est toujours actif
    cy.checkDarkMode();
  });

  it('affiche l\'ic√¥ne appropri√©e selon le th√®me', () => {
    // En mode clair, v√©rifier l'ic√¥ne de lune
    cy.get('[data-testid="theme-toggle"]').should('contain', 'üåô');

    // Changer vers le mode sombre
    cy.get('[data-testid="theme-toggle"]').click();

    // En mode sombre, v√©rifier l'ic√¥ne de soleil
    cy.get('[data-testid="theme-toggle"]').should('contain', '‚òÄÔ∏è');
  });

  it('applique le th√®me sur toute l\'application', () => {
    // Changer vers le th√®me sombre
    cy.get('[data-testid="theme-toggle"]').click();

    // Naviguer vers diff√©rentes pages pour v√©rifier que le th√®me est appliqu√©
    cy.contains('Products').click();
    cy.checkDarkMode();

    cy.contains('Analytics').click();
    cy.checkDarkMode();

    cy.contains('Discounts').click();
    cy.checkDarkMode();
  });
}); 